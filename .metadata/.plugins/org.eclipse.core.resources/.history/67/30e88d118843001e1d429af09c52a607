package com.msb;

import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;

import sun.security.util.Length;

public class Test1 {

	public static void main(String[] args) throws IOException {

		Reader sc = new Reader(System.in);
		int a = sc.nextInt();
		for(int k=0; k<a; k++) {
			int output = 0;
			int b= sc.nextInt();
			int size = (b + "").length();
			for(int i=size-1; i>=0; i--) {
				int d = (int)(b/Math.pow(10, i));
				output += d*Math.pow(10, size-i-1); 
				b %= Math.pow(10, i);
			}
			System.out.println(output);
		}
	}
	
	static class Reader {
		
		private DataInputStream din;
		private byte[] buffer;
		private int BUFFER_SIZE = 1 << 16; 
		private int bufferPointer, bytesRead;
		
		public Reader(InputStream in) {
			din = new DataInputStream(in);
			buffer = new byte[BUFFER_SIZE];
			bufferPointer = bytesRead = 0;
		}
				
		private void fillBuffer() throws IOException {
            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
            if (bytesRead == -1)
            	buffer[0] = -1;			
		}
		
		private byte read() throws IOException {
			if(bufferPointer == bytesRead) {
				fillBuffer();
			}
			return buffer[bufferPointer++];
		}

        public int nextInt() throws IOException
        {
            int ret = 0;
            byte c = read();
            while (c <= ' ') {
                c = read();
            }
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do {
                ret = ret * 10 + c - '0';
            } while ((c = read()) >= '0' && c <= '9');
 
            if (neg)
                return -ret;
            return ret;
        }
	}

}
