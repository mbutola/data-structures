package com.msb.lrg.ds.dp;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Utility {

	public static void printDp(String s1, String s2, int[][] memo) {
		char[] col = s1.toCharArray();
		char[] row = s2.toCharArray();
		for (int i = 0; i < memo[0].length; i++) {
			if(i == 0)
				System.out.printf("%8s", "");
			else
				System.out.printf("%2s  ", row[i-1]);
		}
		System.out.println("");
		for (int i = 0; i < memo.length; i++) {
			if(i == 0)
				System.out.printf("%4s", "");
			else
				System.out.printf("%2s  ", col[i-1]);
			for (int j = 0; j < memo[0].length; j++) {
				System.out.printf("%2d  ", memo[i][j]);
			}
			System.out.println("");
		}
	}

	public static List<String> getArray(int n){
		List<String> lis = new ArrayList<>();
		for (int i = 1; i <= n; i++) {
			lis.add(n+"");
		}
		return lis;
	}
	
	public static List<String> getArray(int[] n){
		List<String> lis = new ArrayList<>();
		for (int i = 0; i < n.length; i++) {
			lis.add(n+"");
		}
		return lis;
	}

	public static void printDp(List<String> s1, List<String> s2, int[][] memo) {
		String[] col = new String[s1.size()];
		s1.toArray(col);
		System.out.println(Arrays.toString(col));
		String[] row = new String[s2.size()];
		s2.toArray(row);
		System.out.println(Arrays.toString(row));
		System.out.println(row.length + " : " + col.length);
		for (int i = 0; i < memo[0].length; i++) {
			if(i == 0)
				System.out.printf("%8s", "");
			else
				System.out.printf("%2s  ", row[i-1]);
		}
		System.out.println("");
		for (int i = 0; i < memo.length; i++) {
			if(i == 0)
				System.out.printf("%4s", "");
			else
				System.out.printf("%2s  ", Integer.parseInt(col[i-1]));
			for (int j = 0; j < memo[0].length; j++) {
				System.out.printf("%2d  ", memo[i][j]);
			}
			System.out.println("");
		}
	}
}
