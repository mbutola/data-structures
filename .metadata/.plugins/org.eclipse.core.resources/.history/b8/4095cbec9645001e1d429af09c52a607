package com.msb.lrg.ds.dp;

public class PalinPartitionRecursive {

	public static void main(String[] args) {
		String str = "geek";
		
//		String test = "adcba";
//		int i = 0;
//		int j = 4;
//		System.out.println(test + " :: " + test.charAt(i) + "," + test.charAt(j) + " :: " + isPalindrome(test, i, j));
		
		System.out.println("O/P : " + PalinPartitionRecursive.PalinPartition(str, 0, str.length()-1));
	}

	public static int PalinPartition(String str, int i, int j) {
		
		if(isPalindrome(str, i, j))
			return 0;
		
		int res = Integer.MAX_VALUE;
		
		for (int k = i; k < j; k++) {
			res = Math.min(res, 1+ PalinPartition(str, i, k)
									+ PalinPartition(str, k+1, j));
		}
		
		return res;
	}
	
	public static boolean isPalindrome(String str, int i, int j) {
        String rev = "";
        boolean ans = false;
 
        for (int k = j; k >= i; k--)
            rev = rev + str.charAt(k);
        
        if (str.equals(rev))
            ans = true;

        System.out.println(i + "," + j + "::" + ans);
        return ans;
     }
}
