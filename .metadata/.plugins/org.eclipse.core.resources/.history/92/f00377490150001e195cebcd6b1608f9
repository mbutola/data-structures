package com.msb.lrg.ds.tree;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.msb.lrg.ds.Node;
import com.msb.lrg.ds.Utility;

public class BiTreeDeserialize {

	public static int EMPTY = -1;

	public static void main(String[] args) {
		List<Integer> list = Arrays.asList(10,20,-1,-1,-1);
		Node root = BiTreeDeserialize.deserialize(list);
		
		Utility.printBinaryTree(root);
	}

	public static Node deserialize(List<Integer> list) {
	
		if(list.size() == 0)
			return null;
		
		Node root = new Node(list.get(0));

		int i = 1;
		Node curr = root;
		while(!list.isEmpty()){
			int ln = list.get(i);
			if(ln != -1) {
				curr.left = new Node(ln);
				i++;
			}
			
			int rn = list.get(i);
			if(list.get(i) != -1) {
				root.right = new Node(list.get(i));
				i++;
			}
		}
		
		return root;
	}
	
	public static Node createTree() {
		Node root = new Node(10);
		Node temp = null;

		temp = new Node(20);
		root.left = temp;
		
		return root;
	}
}
