package com.msb.lrg.ds.dp;

public class SubsetSumDP {

	public static void main(String[] args) {
		int[] arr = new int[] {10,5,2,6,3};
		int sum = 8;
		System.out.println("O/P : " + SubsetSumDP.subSum(arr, sum, arr.length));
	}
	
	public static int subSum(int[] arr, int s, int n) {
		
//		if(n == 0)
//			return (sum == 0) ? 1 : 0;
//		
//		return subSum(arr, sum - arr[n-1], n-1) 
//				+ subSum(arr, sum, n-1);
		
		int[][] dp = new int[n+1][s+1];
		
		for (int i = 0; i <= s; i++) {
			dp[0][i] = 0;
		}
		
		for (int i = 0; i <= n; i++) {
			dp[i][0] = 0;
		}
		
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= s; j++) {
				
			}
		}
		
		return dp[n][s];
	
	}

}
