package com.msb.lrg.ds.tree;

import com.msb.lrg.ds.Node;
import com.msb.lrg.ds.Utility;

public class BiTreeLftView {

	public static void main(String[] args) {
		Node root =  BiTreeLftView.createTree();
		Utility.printBinaryTree(root);
		
        System.out.print("O/P : ");
        BiTreeLftView.printLeft(root, 0, 1);
	}
	
	public static void printLeft(Node root, int lv, int ht) {
		
		if(root == null)
			return;
		
		if(lv < ht) {
			System.out.printf("%4s",root.data);
			if(root.left != null)
				printLeft(root.left, lv++, ht++);
			if(root.right != null)
				printLeft(root.right, lv++, ht++);
			lv--;
		}
		
		
	}

	public static Node createTree() {
		Node root = new Node(10);
		Node temp = null;
		
		temp = new Node(20);
		root.left = temp;
		temp = new Node(30);
		root.right = temp;

		temp = new Node(40);
		root.right.left = temp;
		temp = new Node(50);
		root.right.right = temp;

		return root;
	}
}
