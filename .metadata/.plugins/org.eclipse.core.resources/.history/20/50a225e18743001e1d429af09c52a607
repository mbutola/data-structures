package com.msb.lrg.b;

import java.util.function.Function;

class FunctionImpl implements Function<String, Integer>{

	@Override
	public Integer apply(String str) {
		return str.length();
	}
	
}

public class FunctionInterfaceRunner {

	public static void main(String[] args) {
		
		System.out.println("*** using class");
		Function<String, Integer> funcClass = new FunctionImpl();
		System.out.println(funcClass.apply("manmohan"));

		System.out.println("*** inner class");
		Function<String, Integer> funcInnerClass = new Function<String, Integer>() {
			@Override
			public Integer apply(String t) {
				return t.length();
			}
		};
		System.out.println(funcInnerClass.apply("manmohan"));

		System.out.println("*** using labmda");
		Function<String, Integer> funcLambda = (String str) -> str.length();
		System.out.println(funcLambda.apply("manmohan"));
		
		System.out.println("*** using method reference");
		Function<String, Integer> funcMethodRef = funcLambda::apply;
		System.out.println(funcMethodRef.apply("manmohan"));
		
}

}
