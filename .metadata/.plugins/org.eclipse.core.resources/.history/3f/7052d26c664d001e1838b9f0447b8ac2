package com.msb.lrg.ds.tree;

import com.msb.lrg.ds.Node;
import com.msb.lrg.ds.Utility;

public class BiTreeConsFmPreAndInOrd {

	public static int i_pre = 0;
	
	public static void main(String[] args) {
		
		int[] in = new int[] {40,20,60,50,70,10,80,100,30};
		int[] pre = new int[] {10,20,40,50,60,70,30,80,100};
		
		System.out.println();
		
		Node root = BiTreeConsFmPreAndInOrd.constructBiTree(pre, in, 0, in.length-1, in[0]);
		Utility.printBinaryTree(root);
		
	}

	
	public static Node constructBiTree(int[] pre, int[] in, int s, int f) {
		int x = 0;
		int data = in[i_pre];
		for (int i = 0; i < in.length; i++) {
			if(in[i] == data)
				x = i;
		}
		
		Node node = new Node(data);
		node.left = constructBiTree(pre, in, s, x-1);
		node.left = constructBiTree(pre, in, x+1, f);
		
		return 
	}
}
